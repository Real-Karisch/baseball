# Generated by Django 3.2 on 2021-04-27 22:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Atbats',
            fields=[
                ('gamepk', models.IntegerField(db_column='gamePk', primary_key=True, serialize=False)),
                ('atbatindex', models.IntegerField(db_column='atBatIndex')),
                ('result', models.CharField(blank=True, max_length=50, null=True)),
                ('resulttype', models.CharField(blank=True, db_column='resultType', max_length=50, null=True)),
                ('resultdesc', models.CharField(blank=True, db_column='resultDesc', max_length=500, null=True)),
                ('rbi', models.IntegerField(blank=True, null=True)),
                ('awayscore', models.IntegerField(blank=True, db_column='awayScore', null=True)),
                ('homescore', models.IntegerField(blank=True, db_column='homeScore', null=True)),
                ('istopinning', models.CharField(blank=True, db_column='isTopInning', max_length=50, null=True)),
                ('inning', models.IntegerField(blank=True, null=True)),
                ('isscoringplay', models.CharField(blank=True, db_column='isScoringPlay', max_length=50, null=True)),
                ('hasreview', models.CharField(blank=True, db_column='hasReview', max_length=50, null=True)),
                ('hasout', models.CharField(blank=True, db_column='hasOut', max_length=50, null=True)),
                ('captivatingindex', models.IntegerField(blank=True, db_column='captivatingIndex', null=True)),
                ('batterid', models.IntegerField(blank=True, db_column='batterID', null=True)),
                ('batsidecode', models.CharField(blank=True, db_column='batSideCode', max_length=50, null=True)),
                ('batsidedesc', models.CharField(blank=True, db_column='batSideDesc', max_length=50, null=True)),
                ('pitcherid', models.IntegerField(blank=True, db_column='pitcherID', null=True)),
            ],
            options={
                'db_table': 'atbats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Divisions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('nameshort', models.CharField(blank=True, db_column='nameShort', max_length=50, null=True)),
                ('abbrev', models.CharField(blank=True, max_length=50, null=True)),
                ('leagueid', models.IntegerField(blank=True, db_column='leagueId', null=True)),
                ('haswildcard', models.CharField(blank=True, db_column='hasWildcard', max_length=50, null=True)),
            ],
            options={
                'db_table': 'divisions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Games',
            fields=[
                ('gameId', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('doubleheader', models.CharField(blank=True, db_column='doubleHeader', max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=50, null=True)),
                ('gamedaytype', models.CharField(blank=True, db_column='gamedayType', max_length=50, null=True)),
                ('tiebreaker', models.CharField(blank=True, db_column='tieBreaker', max_length=50, null=True)),
                ('calendareventid', models.CharField(blank=True, db_column='calendarEventID', max_length=50, null=True)),
                ('seasondisplay', models.IntegerField(blank=True, db_column='seasonDisplay', null=True)),
                ('datetime', models.CharField(blank=True, max_length=50, null=True)),
                ('originaldate', models.CharField(blank=True, db_column='originalDate', max_length=50, null=True)),
                ('daynight', models.CharField(blank=True, db_column='dayNight', max_length=50, null=True)),
                ('time', models.CharField(blank=True, max_length=50, null=True)),
                ('ampm', models.CharField(blank=True, max_length=50, null=True)),
                ('awaygamesplayed', models.IntegerField(blank=True, db_column='awayGamesPlayed', null=True)),
                ('awaywins', models.IntegerField(blank=True, db_column='awayWins', null=True)),
                ('awaylosses', models.IntegerField(blank=True, db_column='awayLosses', null=True)),
                ('awaydivisionleader', models.CharField(blank=True, db_column='awayDivisionLeader', max_length=50, null=True)),
                ('homegamesplayed', models.IntegerField(blank=True, db_column='homeGamesPlayed', null=True)),
                ('homewins', models.IntegerField(blank=True, db_column='homeWins', null=True)),
                ('homelosses', models.IntegerField(blank=True, db_column='homeLosses', null=True)),
                ('homedivisionleader', models.CharField(blank=True, db_column='homeDivisionLeader', max_length=50, null=True)),
                ('weatherconditions', models.CharField(blank=True, db_column='weatherConditions', max_length=50, null=True)),
                ('temp', models.IntegerField(blank=True, null=True)),
                ('wind', models.CharField(blank=True, max_length=50, null=True)),
                ('nohitter', models.CharField(blank=True, db_column='noHitter', max_length=50, null=True)),
                ('perfectgame', models.CharField(blank=True, db_column='perfectGame', max_length=50, null=True)),
            ],
            options={
                'db_table': 'games',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Leagues',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('abbrev', models.CharField(blank=True, max_length=50, null=True)),
                ('nameshort', models.CharField(blank=True, db_column='nameShort', max_length=50, null=True)),
            ],
            options={
                'db_table': 'leagues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(blank=True, db_column='fullName', max_length=100, null=True)),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=50, null=True)),
                ('primarynumber', models.CharField(blank=True, db_column='primaryNumber', max_length=50, null=True)),
                ('birthdate', models.CharField(blank=True, db_column='birthDate', max_length=50, null=True)),
                ('birthcity', models.CharField(blank=True, db_column='birthCity', max_length=50, null=True)),
                ('birthcountry', models.CharField(blank=True, db_column='birthCountry', max_length=50, null=True)),
                ('height', models.CharField(blank=True, max_length=50, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('positioncode', models.CharField(blank=True, db_column='positionCode', max_length=50, null=True)),
                ('positionname', models.CharField(blank=True, db_column='positionName', max_length=50, null=True)),
                ('positiontype', models.CharField(blank=True, db_column='positionType', max_length=50, null=True)),
                ('positionabbrev', models.CharField(blank=True, db_column='positionAbbrev', max_length=50, null=True)),
                ('usename', models.CharField(blank=True, db_column='useName', max_length=50, null=True)),
                ('middlename', models.CharField(blank=True, db_column='middleName', max_length=50, null=True)),
                ('boxscorename', models.CharField(blank=True, db_column='boxscoreName', max_length=100, null=True)),
                ('isplayer', models.CharField(blank=True, db_column='isPlayer', max_length=50, null=True)),
                ('mlbdebutdate', models.CharField(blank=True, db_column='mlbDebutDate', max_length=50, null=True)),
                ('batsidecode', models.CharField(blank=True, db_column='batSideCode', max_length=50, null=True)),
                ('batsidedesc', models.CharField(blank=True, db_column='batSideDesc', max_length=50, null=True)),
                ('pitchhandcode', models.CharField(blank=True, db_column='pitchHandCode', max_length=50, null=True)),
                ('pitchhanddesc', models.CharField(blank=True, db_column='pitchHandDesc', max_length=50, null=True)),
                ('sztop', models.FloatField(blank=True, db_column='szTop', null=True)),
                ('szbottom', models.FloatField(blank=True, db_column='szBottom', null=True)),
            ],
            options={
                'db_table': 'players',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Seasons',
            fields=[
                ('seasonid', models.IntegerField(db_column='seasonId', primary_key=True, serialize=False)),
                ('regseasstartdate', models.CharField(blank=True, db_column='regSeasStartDate', max_length=50, null=True)),
                ('regseasenddate', models.CharField(blank=True, db_column='regSeasEndDate', max_length=50, null=True)),
                ('preseasstartdate', models.CharField(blank=True, db_column='preSeasStartDate', max_length=50, null=True)),
                ('preseasenddate', models.CharField(blank=True, db_column='preSeasEndDate', max_length=50, null=True)),
                ('postseasstartdate', models.CharField(blank=True, db_column='postSeasStartDate', max_length=50, null=True)),
                ('postseasenddate', models.CharField(blank=True, db_column='postSeasEndDate', max_length=50, null=True)),
                ('lastdate1sthalf', models.CharField(blank=True, db_column='lastDate1stHalf', max_length=50, null=True)),
                ('firstdate2ndhalf', models.CharField(blank=True, db_column='firstDate2ndHalf', max_length=50, null=True)),
                ('allstardate', models.CharField(blank=True, db_column='allStarDate', max_length=50, null=True)),
            ],
            options={
                'db_table': 'seasons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sports',
            fields=[
                ('sportid', models.IntegerField(db_column='sportId', primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('abbrev', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'sports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('teamcode', models.CharField(blank=True, db_column='teamCode', max_length=50, null=True)),
                ('filecode', models.CharField(blank=True, db_column='fileCode', max_length=50, null=True)),
                ('abbrev', models.CharField(blank=True, max_length=50, null=True)),
                ('teamname', models.CharField(blank=True, db_column='teamName', max_length=50, null=True)),
                ('locationname', models.CharField(blank=True, db_column='locationName', max_length=50, null=True)),
                ('firstyearofplay', models.IntegerField(blank=True, db_column='firstYearOfPlay', null=True)),
                ('shortname', models.CharField(blank=True, db_column='shortName', max_length=50, null=True)),
            ],
            options={
                'db_table': 'teams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Venues',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, max_length=50, null=True)),
                ('longitude', models.CharField(blank=True, max_length=50, null=True)),
                ('tzoffset', models.CharField(blank=True, db_column='tzOffset', max_length=50, null=True)),
                ('tzname', models.CharField(blank=True, db_column='tzName', max_length=50, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('turftype', models.CharField(blank=True, db_column='turfType', max_length=50, null=True)),
                ('rooftype', models.CharField(blank=True, db_column='roofType', max_length=50, null=True)),
                ('leftline', models.IntegerField(blank=True, db_column='leftLine', null=True)),
                ('leftcenter', models.IntegerField(blank=True, db_column='leftCenter', null=True)),
                ('center', models.IntegerField(blank=True, null=True)),
                ('rightcenter', models.IntegerField(blank=True, db_column='rightCenter', null=True)),
                ('rightline', models.IntegerField(blank=True, db_column='rightLine', null=True)),
            ],
            options={
                'db_table': 'venues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Actions',
            fields=[
                ('gamepk', models.OneToOneField(db_column='gamePk', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='reports.games')),
                ('atbatindex', models.IntegerField(db_column='atBatIndex')),
                ('actionindex', models.IntegerField(db_column='actionIndex')),
                ('eventtype', models.CharField(blank=True, db_column='eventType', max_length=100, null=True)),
                ('awayscore', models.IntegerField(blank=True, db_column='awayScore', null=True)),
                ('homescore', models.IntegerField(blank=True, db_column='homeScore', null=True)),
                ('isscoringplay', models.CharField(blank=True, db_column='isScoringPlay', max_length=50, null=True)),
                ('balls', models.IntegerField(blank=True, null=True)),
                ('strikes', models.IntegerField(blank=True, null=True)),
                ('outs', models.IntegerField(blank=True, null=True)),
                ('ispitch', models.CharField(blank=True, db_column='isPitch', max_length=50, null=True)),
                ('eventdescription', models.CharField(blank=True, db_column='eventDescription', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pitches',
            fields=[
                ('gamepk', models.OneToOneField(db_column='gamePk', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='reports.games')),
                ('atbatindex', models.IntegerField(db_column='atBatIndex')),
                ('pitchindex', models.IntegerField(db_column='pitchIndex')),
                ('callcode', models.CharField(blank=True, db_column='callCode', max_length=50, null=True)),
                ('calldesc', models.CharField(blank=True, db_column='callDesc', max_length=50, null=True)),
                ('isinplay', models.CharField(blank=True, db_column='isInPlay', max_length=50, null=True)),
                ('isstrike', models.CharField(blank=True, db_column='isStrike', max_length=50, null=True)),
                ('isball', models.CharField(blank=True, db_column='isBall', max_length=50, null=True)),
                ('typecode', models.CharField(blank=True, db_column='typeCode', max_length=50, null=True)),
                ('typedesc', models.CharField(blank=True, db_column='typeDesc', max_length=100, null=True)),
                ('hasreview', models.CharField(blank=True, db_column='hasReview', max_length=50, null=True)),
                ('countballs', models.IntegerField(blank=True, db_column='countBalls', null=True)),
                ('countstrikes', models.IntegerField(blank=True, db_column='countStrikes', null=True)),
                ('startspeed', models.DecimalField(blank=True, db_column='startSpeed', decimal_places=1, max_digits=5, null=True)),
                ('endspeed', models.DecimalField(blank=True, db_column='endSpeed', decimal_places=1, max_digits=5, null=True)),
                ('sztop', models.DecimalField(blank=True, db_column='szTop', decimal_places=2, max_digits=7, null=True)),
                ('szbottom', models.DecimalField(blank=True, db_column='szBottom', decimal_places=2, max_digits=7, null=True)),
                ('ax', models.DecimalField(blank=True, db_column='aX', decimal_places=2, max_digits=7, null=True)),
                ('ay', models.DecimalField(blank=True, db_column='aY', decimal_places=2, max_digits=7, null=True)),
                ('az', models.DecimalField(blank=True, db_column='aZ', decimal_places=2, max_digits=7, null=True)),
                ('pfxx', models.DecimalField(blank=True, db_column='pfxX', decimal_places=2, max_digits=7, null=True)),
                ('pfxz', models.DecimalField(blank=True, db_column='pfxZ', decimal_places=2, max_digits=7, null=True)),
                ('px', models.DecimalField(blank=True, db_column='pX', decimal_places=2, max_digits=7, null=True)),
                ('pz', models.DecimalField(blank=True, db_column='pZ', decimal_places=2, max_digits=7, null=True)),
                ('vx0', models.DecimalField(blank=True, db_column='vX0', decimal_places=2, max_digits=7, null=True)),
                ('vy0', models.DecimalField(blank=True, db_column='vY0', decimal_places=2, max_digits=7, null=True)),
                ('vz0', models.DecimalField(blank=True, db_column='vZ0', decimal_places=2, max_digits=7, null=True)),
                ('x', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('y', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('x0', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('y0', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('z0', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('breakangle', models.DecimalField(blank=True, db_column='breakAngle', decimal_places=1, max_digits=7, null=True)),
                ('breaklength', models.DecimalField(blank=True, db_column='breakLength', decimal_places=1, max_digits=7, null=True)),
                ('breaky', models.DecimalField(blank=True, db_column='breakY', decimal_places=1, max_digits=7, null=True)),
                ('spinrate', models.IntegerField(blank=True, db_column='spinRate', null=True)),
                ('spindirection', models.IntegerField(blank=True, db_column='spinDirection', null=True)),
                ('zone', models.IntegerField(blank=True, null=True)),
                ('typeconfidence', models.DecimalField(blank=True, db_column='typeConfidence', decimal_places=2, max_digits=7, null=True)),
                ('platetime', models.DecimalField(blank=True, db_column='plateTime', decimal_places=2, max_digits=7, null=True)),
                ('extension', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('pitchnumber', models.IntegerField(blank=True, db_column='pitchNumber', null=True)),
                ('launchspeed', models.DecimalField(blank=True, db_column='launchSpeed', decimal_places=2, max_digits=7, null=True)),
                ('launchangle', models.DecimalField(blank=True, db_column='launchAngle', decimal_places=2, max_digits=7, null=True)),
                ('totaldistance', models.DecimalField(blank=True, db_column='totalDistance', decimal_places=2, max_digits=7, null=True)),
                ('trajectory', models.CharField(blank=True, max_length=50, null=True)),
                ('hardness', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.IntegerField(blank=True, null=True)),
                ('coordx', models.DecimalField(blank=True, db_column='coordX', decimal_places=2, max_digits=7, null=True)),
                ('coordy', models.DecimalField(blank=True, db_column='coordY', decimal_places=2, max_digits=7, null=True)),
            ],
            options={
                'db_table': 'pitches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Runners',
            fields=[
                ('gamepk', models.OneToOneField(db_column='gamePk', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='reports.games')),
                ('atbatindex', models.IntegerField(db_column='atBatIndex')),
                ('playindex', models.IntegerField(db_column='playIndex')),
                ('startbase', models.CharField(blank=True, db_column='startBase', max_length=50, null=True)),
                ('endbase', models.CharField(blank=True, db_column='endBase', max_length=50, null=True)),
                ('isout', models.CharField(blank=True, db_column='isOut', max_length=50, null=True)),
                ('outnumber', models.CharField(blank=True, db_column='outNumber', max_length=50, null=True)),
                ('eventtype', models.CharField(blank=True, db_column='eventType', max_length=100, null=True)),
                ('movementreason', models.CharField(blank=True, db_column='movementReason', max_length=100, null=True)),
                ('isscoringevent', models.CharField(blank=True, db_column='isScoringEvent', max_length=50, null=True)),
                ('rbi', models.CharField(blank=True, max_length=50, null=True)),
                ('earned', models.CharField(blank=True, max_length=50, null=True)),
                ('outbase', models.CharField(blank=True, db_column='outBase', max_length=50, null=True)),
                ('runnerindex', models.IntegerField(db_column='runnerIndex')),
            ],
            options={
                'db_table': 'runners',
                'managed': False,
            },
        ),
    ]
